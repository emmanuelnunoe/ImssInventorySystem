// <auto-generated />
using System;
using ImssInventory.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImssInventory.API.Migrations
{
    [DbContext(typeof(ImssInventoryContext))]
    [Migration("20220219084048_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ImssInventory.API.Models.CheckList", b =>
                {
                    b.Property<int>("CheckListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckListId"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CheckListId");

                    b.ToTable("CheckList");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("HardDrive")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MonitorId")
                        .HasColumnType("int");

                    b.Property<int>("OsId")
                        .HasColumnType("int");

                    b.Property<int>("PcAccountancyDataId")
                        .HasColumnType("int");

                    b.Property<int>("PcNetworkInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Processor")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<byte?>("Ram")
                        .HasMaxLength(6)
                        .HasColumnType("tinyint");

                    b.Property<string>("Speed")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MonitorId");

                    b.HasIndex("OsId");

                    b.HasIndex("PcAccountancyDataId");

                    b.HasIndex("PcNetworkInformationId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Domain", b =>
                {
                    b.Property<int>("DomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomainId"), 1L, 1);

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DomainId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<int>("Assignment")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("SecondSourname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("TypeOfContract")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("employeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ImssInventory.API.Models.ITUser", b =>
                {
                    b.Property<int>("ITUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ITUserID"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmailVerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ITUserID");

                    b.ToTable("ITUsers");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordinationOrUnity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelegationOrMunicipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentOrService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionAreaOrSpecialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImssProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormativeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneOrVPN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreyKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"), 1L, 1);

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ITUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MaintenanceFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("CheckListId");

                    b.HasIndex("ITUserId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Monitor", b =>
                {
                    b.Property<int>("MonitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonitorId"), 1L, 1);

                    b.Property<string>("MonitorBrand")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MonitorModel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MonitorSerialNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MonitorId");

                    b.ToTable("Monitors");
                });

            modelBuilder.Entity("ImssInventory.API.Models.OS", b =>
                {
                    b.Property<int>("OsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsId"), 1L, 1);

                    b.Property<byte?>("ActiveLicence")
                        .HasColumnType("tinyint");

                    b.Property<int>("Edition")
                        .HasColumnType("int");

                    b.Property<string>("OperativeSystem")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ServicePack")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("TypeOs")
                        .HasColumnType("tinyint");

                    b.HasKey("OsId");

                    b.ToTable("OS");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PasswordReset", b =>
                {
                    b.Property<int>("PasswordResetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordResetId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PasswordResetId");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcAccountancyData", b =>
                {
                    b.Property<int>("PcAccountancyDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PcAccountancyDataId"), 1L, 1);

                    b.Property<int?>("AdquisitionYear")
                        .HasColumnType("int");

                    b.Property<string>("CostsCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PcAccountancyDataId");

                    b.ToTable("PcAccountancyData");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcDomainInformation", b =>
                {
                    b.Property<int>("PcDomainInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PcDomainInformationId"), 1L, 1);

                    b.Property<string>("DomainAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DomainId")
                        .HasColumnType("int");

                    b.Property<bool>("HasLynk")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInDomain")
                        .HasColumnType("bit");

                    b.Property<string>("ReazonToBeAdministrator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPermissions")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PcDomainInformationId");

                    b.HasIndex("DomainId");

                    b.ToTable("PcDomainInformation");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcNetworkInformation", b =>
                {
                    b.Property<int>("PcNetworkInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PcNetworkInformationId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Internet")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte>("IpType")
                        .HasColumnType("tinyint");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PcNetworkInformationId");

                    b.ToTable("PcNetworkInformation");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcUpdate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComputerId")
                        .HasColumnType("int");

                    b.Property<int>("ITUserID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ComputerId");

                    b.HasIndex("ITUserID");

                    b.ToTable("PcUpdates");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"), 1L, 1);

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwareId");

                    b.HasIndex("CheckListId");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Computer", b =>
                {
                    b.HasOne("ImssInventory.API.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImssInventory.API.Models.Monitor", "Monitor")
                        .WithMany()
                        .HasForeignKey("MonitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImssInventory.API.Models.OS", "OS")
                        .WithMany()
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImssInventory.API.Models.PcAccountancyData", "PcAccountancyData")
                        .WithMany()
                        .HasForeignKey("PcAccountancyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImssInventory.API.Models.PcNetworkInformation", "PcNetworkInformation")
                        .WithMany()
                        .HasForeignKey("PcNetworkInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Monitor");

                    b.Navigation("OS");

                    b.Navigation("PcAccountancyData");

                    b.Navigation("PcNetworkInformation");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Employee", b =>
                {
                    b.HasOne("ImssInventory.API.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Maintenance", b =>
                {
                    b.HasOne("ImssInventory.API.Models.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");

                    b.HasOne("ImssInventory.API.Models.ITUser", "ITUser")
                        .WithMany()
                        .HasForeignKey("ITUserId");

                    b.Navigation("CheckList");

                    b.Navigation("ITUser");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcDomainInformation", b =>
                {
                    b.HasOne("ImssInventory.API.Models.Domain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("ImssInventory.API.Models.PcUpdate", b =>
                {
                    b.HasOne("ImssInventory.API.Models.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImssInventory.API.Models.ITUser", "ITUser")
                        .WithMany()
                        .HasForeignKey("ITUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("ITUser");
                });

            modelBuilder.Entity("ImssInventory.API.Models.Software", b =>
                {
                    b.HasOne("ImssInventory.API.Models.CheckList", null)
                        .WithMany("SoftwareList")
                        .HasForeignKey("CheckListId");
                });

            modelBuilder.Entity("ImssInventory.API.Models.CheckList", b =>
                {
                    b.Navigation("SoftwareList");
                });
#pragma warning restore 612, 618
        }
    }
}
